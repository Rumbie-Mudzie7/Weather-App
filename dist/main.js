/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
eval("function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar myForm = document.querySelector('.form-area');\n\nvar locationForm = function locationForm() {\n  var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var newForm = \"<form action=\\\"#\\\" method=\\\"POST\\\" class=\\\"location-form\\\"><input type=\\\"text\\\" placeholder=\\\"Enter location name\\\" name=\\\"locationName\\\" required value=\\\"\".concat(value, \"\\\"><input type=\\\"submit\\\"></form>\");\n  return newForm;\n};\n\nmyForm.innerHTML = locationForm();\nvar weatherForm = document.querySelector('.location-form');\n\nfunction getWeatherData() {\n  return _getWeatherData.apply(this, arguments);\n}\n\nfunction _getWeatherData() {\n  _getWeatherData = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n    var path, response, json;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            path = \"url\";\n            _context.prev = 1;\n            _context.next = 4;\n            return fetch(path);\n\n          case 4:\n            response = _context.sent;\n            _context.next = 7;\n            return response.json();\n\n          case 7:\n            json = _context.sent;\n            return _context.abrupt(\"return\", json);\n\n          case 11:\n            _context.prev = 11;\n            _context.t0 = _context[\"catch\"](1);\n            console.log(_context.t0);\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[1, 11]]);\n  }));\n  return _getWeatherData.apply(this, arguments);\n}\n\ngetWeatherData();\n\n//# sourceURL=webpack://weather-app/./src/index.js?");
/******/ })()
;